<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:LancerUI.Controls.Input"
                    xmlns:base="clr-namespace:LancerUI.Controls.Base"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:buttons="clr-namespace:LancerUI.Controls.Buttons">
    <Style TargetType="{x:Type local:LUPasswordInput}">
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Width" Value="AUTO"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="ClipToBounds" Value="False"/>
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="IconSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource LUInputForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource LUInputBgBrush}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource ThemeBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LUPasswordInput}">
                    <StackPanel>
                        <Grid Height="{TemplateBinding InputHeight}">
                            <Border x:Name="SubBorder" Panel.ZIndex="2" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{DynamicResource ThemeBrush}" BorderThickness="0,0,0,2" Visibility="Hidden"></Border>
                            <Border x:Name="BoxBorder" Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="{TemplateBinding CornerRadius}" Padding="{TemplateBinding Padding}">
                                <Border.BorderBrush>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>

                                                <Path x:Name="ColoredBorderLeft" Data="M0,0 L0,0 1,0.5 L1,0.5 0,1" Fill="{DynamicResource LUInputMainBorderBrush}" Stretch="Fill" Grid.RowSpan="2"/>
                                                <Path x:Name="ColoredBorderRight" Data="M1,0 L1,0 0,0.5 L0,0.5 1,1" Fill="{DynamicResource LUInputMainBorderBrush}" Stretch="Fill" Grid.Column="1" Grid.RowSpan="2"/>
                                                <Path x:Name="ColoredBorderTop" Data="M0,0 L0,0 0.5,1 L0.5,1 1,0" Fill="{DynamicResource LUInputMainBorderBrush}" Stretch="Fill" Grid.ColumnSpan="2"/>
                                                <Path x:Name="ColoredBorderBottom" Data="M0,1 L0,1 0.5,0 L0.5,0 1,1" Fill="{DynamicResource LUInputSubBorderBrush}" Stretch="Fill" Grid.Row="1" Grid.ColumnSpan="2"/>
                                            </Grid>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Border.BorderBrush>
                                <Grid VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <!--前置内容0-->
                                        <ColumnDefinition Width="auto"/>
                                        <!--图标预留位1-->
                                        <ColumnDefinition Width="auto"/>
                                        <!--输入区域2-->
                                        <ColumnDefinition Width="*"/>
                                        <!--清除按钮3-->
                                        <ColumnDefinition Width="auto"/>
                                        <!--图标预留位4-->
                                        <ColumnDefinition Width="auto"/>
                                        <!--后置内容5-->
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <!--前置内容-->
                                    <ContentPresenter VerticalAlignment="Center" Content="{TemplateBinding ContentBefore}"/>
                                    <!--图标-->
                                    <base:Icon x:Name="Icon" Grid.Column="1" Symbol="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding IconSize}" Margin="5,0,0,0" VerticalAlignment="Center">
                                    </base:Icon>

                                    <!--输入区域-->
                                    <Grid Grid.Column="2" Margin="5,0" VerticalAlignment="Center">
                                        <!--输入框占位文本-->
                                        <TextBlock  x:Name="Placeholder" Text="{TemplateBinding Placeholder}" Foreground="#a3a3a3" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Stretch" 
Visibility="Collapsed" />
                                        <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="{TemplateBinding HorizontalContentAlignment}" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Padding="0"/>
                                    </Grid>
                                    <!--清除按钮-->
                                    <buttons:LUButton  x:Name="ClearableBtn" Grid.Column="3" Command="{x:Static local:LUInputCommands.ClearableCommand}" Focusable="False" Padding="0" Visibility="Collapsed"  Icon="Dismiss" Height="25" Width="25" HorizontalAlignment="Center" IconSize="14" Appearance="Subtle"></buttons:LUButton>
                                    <!--后置内容-->
                                    <ContentPresenter Grid.Column="5" VerticalAlignment="Center" Content="{TemplateBinding ContentAfter}"/>
                                </Grid>

                            </Border>
                            <Popup
                                    x:Name="Popup"
                                    AllowsTransparency="True"
                                    IsOpen="{TemplateBinding IsOpenPopup}"
                                    Placement="Bottom"
                                    PlacementTarget="{Binding ElementName=BoxBorder}"
                                    PopupAnimation="Slide"
                                    StaysOpen="True"
                            >
                                <Border
                                Width="{Binding ElementName=BoxBorder,Path=ActualWidth}"
                                        Background="{DynamicResource LUInputBgBrush}"
                                BorderBrush="#cccdcf"
                                BorderThickness="1"
                                        CornerRadius="{TemplateBinding CornerRadius}"
                                Margin="10">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Direction="0" Color="#ccc" Opacity="0.2"/>
                                    </Border.Effect>
                                    <ContentPresenter Content="{TemplateBinding PopupContent}"/>
                                </Border>
                            </Popup>
                        </Grid>
                        <Grid x:Name="InvalidTip" Visibility="Collapsed" Margin="0,5,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <base:Icon Symbol="WarningFilled" Foreground="{DynamicResource DangerBrush}" VerticalAlignment="Center" FontSize="18" Margin="0,0,5,0"/>
                            <TextBlock Grid.Column="1" FontSize="12" Foreground="{DynamicResource DangerBrush}" TextWrapping="WrapWithOverflow" Text="{TemplateBinding InvalidMessage}" VerticalAlignment="Center"/>
                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <!--背景色控制-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource LUInputHoverBgBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource LUInputFocusedBgBrush}"/>
                            <Setter TargetName="SubBorder" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="None">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IconPosition" Value="Right">
                            <Setter TargetName="Icon" Property="Grid.Column" Value="4"/>
                            <Setter TargetName="Icon" Property="Margin" Value="5,0,5,0"/>
                        </Trigger>
                        <!--弹出层控制-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="IsFocusedPopup" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="IsOpenPopup" Value="True"/>
                        </MultiTrigger>
                        <!--清除按钮样式控制-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsClearable" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ClearableBtn" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ClearableBtn" Property="Margin" Value="5,0,0,0"/>
                        </MultiTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="{x:Static sys:String.Empty}">
                            <Setter TargetName="Placeholder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ClearableBtn" Property="Visibility" Value="Collapsed"/>

                        </DataTrigger>
                        <!--禁用效果-->
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource DisabledTextBrush}"/>
                            <Setter TargetName="Placeholder" Property="Foreground" Value="{DynamicResource DisabledTextBrush}"/>-->
                            <Setter Property="Cursor" Value="No"/>
                            <Setter Property="Foreground" Value="{DynamicResource LUInputDisabledForegroundBrush}"/>
                            <Setter TargetName="BoxBorder" Property="Background" Value="{DynamicResource LUInputDisabledBgBrush}"/>
                            <Setter TargetName="BoxBorder" Property="BorderBrush" Value="{DynamicResource LUInputDisabledBorderBrush}"/>
                        </Trigger>
                        <!--验证内容无效提示控制-->
                        <Trigger Property="IsInvalid" Value="True">
                            <Setter TargetName="InvalidTip" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="SubBorder" Property="BorderBrush" Value="{DynamicResource DangerBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
</ResourceDictionary>