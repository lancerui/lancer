<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:LancerUI.Controls.Select" xmlns:base="clr-namespace:LancerUI.Controls.Base">
    <Style TargetType="{x:Type local:LUSelect}">
        <Setter Property="Height" Value="32"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LUSelect}">
                    <Grid>
                        <Border x:Name="SubBorder" BorderBrush="{DynamicResource LUSelectSubBorderBrush}" CornerRadius="4" BorderThickness="0,0,0,1" Panel.ZIndex="1"/>
                        <Border x:Name="Button"
                                Background="{DynamicResource LUSelectBgBrush}"
                                BorderBrush="{DynamicResource LUSelectBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="DisplayText" VerticalAlignment="Center"/>
                                <base:Icon x:Name="Icon" VerticalAlignment="Center" Foreground="{DynamicResource LUSelectIconBrush}" Grid.Column="1" FontSize="12" Symbol="ChevronDownFilled" RenderTransformOrigin="0.5,0.5">
                                    <base:Icon.RenderTransform>
                                        <TranslateTransform X="0" Y="0"/>
                                    </base:Icon.RenderTransform>
                                </base:Icon>
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup"
                               AllowsTransparency="True"
                               Placement="Bottom"
                               StaysOpen="False"
                               PopupAnimation="Slide">
                            <Border x:Name="DropDown"
                                    Background="{DynamicResource LUSelectPopupBgBrush}"
                                    BorderBrush="{DynamicResource LUSelectPopupBorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="4"
                                    Padding="5"
                                    Margin="10">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0" BlurRadius="10" Color="#000" Direction="0" Opacity=".1"/>
                                </Border.Effect>
                                <ScrollViewer x:Name="ScrollViewer"
                                              CanContentScroll="True"
                                              VerticalScrollBarVisibility="Auto"
                                              MaxHeight="200">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Button" Property="Background" Value="{DynamicResource LUSelectHoverBgBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="SubBorder" Property="Visibility" Value="Hidden"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:0.15" Storyboard.TargetName="Icon" Storyboard.TargetProperty="RenderTransform.Y" To="2"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard >
                                        <DoubleAnimation Duration="00:00:0.15" Storyboard.TargetName="Icon" Storyboard.TargetProperty="RenderTransform.Y" To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Button" Property="Background" Value="{DynamicResource LUSelectDisabledBgBrush}"/>
                            <Setter TargetName="Button" Property="BorderBrush" Value="{DynamicResource LUSelectDisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource LUSelectDisabledForegroundBrush}"/>
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource LUSelectDisabledForegroundBrush}"/>
                            <Setter TargetName="SubBorder" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <local:LUSelectItem Icon="{Binding Icon}" Text="{Binding Text}"></local:LUSelectItem>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>